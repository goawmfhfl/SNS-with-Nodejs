<!DOCTYPE html>
<html>
  <head>
    <% include ./layout/header %>
    <link rel="stylesheet" href="/stylesheets/index.css" />
    <script src="/socket.io/socket.io.js"></script>
  </head>
  <body>
    <% include ./layout/navbar %>
    <div class="content_wrap">
      <div class="content_scroll">
        <% postList.forEach(e => { %>
        <div class="ui card" key="<%= e._id %>">
          <div class="image">
            <img class="post_image" src="<%= e.image %>" />
          </div>
          <div class="content">
            <a href="/posts/<%= e._id %>" class="header"><%= e.title %></a>
            <div class="meta">
              <span class="date">
                <%= e.user.username %> / <%= e.publishedDate %></span
              >
            </div>
            <div class="description"><%= e.content %></div>
          </div>
          <div class="extra content">
            <% if (e.likeUser.some((user) => user ===
            isAuthenticated.username)){ %>
            <a class="heart-count checked" id="<%= e._id %>" key="<%= e._id %>">
              <i class="heart icon"></i>
              <span class="heart-like-count"><%= e.likeCount %></span> likes
            </a>
            <% }else{ %>
            <a class="heart-count" id="<%= e._id %>" key="<%= e._id %>">
              <i class="heart icon"></i>
              <span class="heart-like-count"><%= e.likeCount %></span> likes
            </a>
            <%} %>
            <a class="comment_button" id="<%= e._id %>" key="<%= e._id %>">
              <i class="comment icon"></i>
              comments
            </a>
          </div>
          <div class="content comment_wrap" id="comment_wrap_<%= e._id %>">
            <div class="input_wrap">
              <input key="<%= e._id %>" name="comment" class="comment_input" />
            </div>
            <div class="comment_body" id="comment_<%= e._id %>">
              <% e.comment.reverse().forEach(comment => { %>
              <div class="comment_body_item">
                <div style="font-weight: bolder">
                  <%= comment.user.username %>
                </div>
                <div><%= comment.comment %></div>
              </div>
              <% }) %>
            </div>
          </div>
        </div>
        <% }) %>
      </div>
      <div>
        <div class="chat_wrap">
          <div class="chat_content"></div>
          <form id="chat_form">
            <div style="width: 100%" class="ui action input">
              <input class="chat_input" type="text" />
              <button class="ui button">보내기</button>
            </div>
          </form>
        </div>
      </div>
    </div>
    <script>
      let name;
      // 좋아요버튼 클릭을 할 경우 발생하는 이벤트
      $(".heart-count").click(function (e) {
        const id = $(this).attr("key");
        // 클릭한 값의 id값을 받아오게 된다.
        // ajax 요청을 한다.
        $.ajax({
          // id url에 post로 요청값을 보낸다
          url: `/posts/like/${id}`,
          type: "POST",
          cache: false,
          dataType: "json",
          success: function (data) {
            $(`#${id} > span`).text(data.post.likeCount);
            // 데이터 체크를 통해서 해당 파일이 checkd 표시가 될지
            // class를 더할지 말지로 정해준다
            // 클래스가 생긴다면 체크된 ui를 위해 그에맞는 클래스를 추가한다.
            if (!data.check) {
              $(`#${id}`).addClass("checked");
            } else {
              $(`#${id}`).removeClass("checked");
            }
          },
          error: function (request, status, error) {
            alert(error);
          },
        });
      });
      // 댓글기능 구현
      $(".comment_button").click(function (e) {
        const id = $(this).attr("key");
        // 사용자의 아이디 값을 가져온다.
        // 해당 아이디를 가진 요소에 값을 가져온다.

        $(`#comment_wrap_${id}`).slideToggle();
      });
      // 엔터를 누르면 이벤트 발생
      $(".comment_input").keydown(function (e) {
        // 13 === 엔터
        if (e.keyCode === 13) {
          e.preventDefault();
          const id = $(this).attr("key");
          // id값을 불러온다
          const inputCommnet = $(this).val();
          // 입력한 댓글 내용을 받아온다
          $(this).val("");
          // 댓글 내용을 초기화한다

          // ajax요청을 보낸다.
          $.ajax({
            url: `/posts/comment/${id}`,
            type: "POST",
            cache: false,
            dataType: "json",
            // 내용을 data에 담아서 보낸다
            data: {
              comment: inputCommnet,
            },

            // 응답을 잘 받을 경우 data에 담긴다.
            success: function (data) {
              // 백단에서 받은 정보를 바탕으로 데이터 바인딩을 시킨 후에
              // 화면에 보여주게 된다
              const comment = data.post.comment;
              let comment_body = "";
              const arr = comment.reverse();
              arr.forEach(e => {
                console.log("EEE");
                comment_body += `
              <div class="comment_body_item">
                <div style="font-weight: bolder;">
                  ${e.user.username}
                </div>
                <div>
                  ${e.comment} 
                </div>
              </div>
              `;
              });
              $(`#comment_${id}`).html(comment_body);
            },
            error: function (request, status, error) {
              alert(error);
            },
          });
        }
      });
      // 실시간 채팅 기능 구현
      $(() => {
        const socket = io();
        $("#chat_form").submit(() => {
          socket.emit("chat-msg", name, $(".chat_input").val());
          $(".chat_input").val("");
          return false;
        });
        socket.on("chat-msg", (name, msg) => {
          let chat = `<div class="chat_block">
          <span style="font-weight: bolder">${name}</span> :
            ${msg}
          </div>`;
          $(".chat_content").append(chat);
        });
      });
    </script>
  </body>
</html>
